<Window x:Class="WPFTest.View.LoginView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFTest" 
        xmlns:common="clr-namespace:WPFTest.Common"
        mc:Ignorable="d" Name="Window"
        Title="系统登录" Height="600" Width="300"
        FontFamily="Microsoft YaHei" FontWeight="ExtraLight"
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        WindowStyle="None" AllowsTransparency="True" Background="{x:Null}"
        >
    <Window.Resources>
        <ResourceDictionary Source="../Asserts/Styles/DefaultStyle.xaml">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <!--这个每个页面都需要的那个x，在这边有两种方式去做这个×，用了图片的方式这边-->
                    <ControlTemplate TargetType="Button" x:Key="CloseButtonTemplateBefore">
                        <Border Background="Transparent" Name="back">
                            <!--这边的M代表开始的位置，每次出现代表开始新的位置，代表从0 0（左上角）先移动到12 12（右下角）
                然后M出现代表出现新的线条，然后从0 12（左下角）的位置开始新的线条到右上角-->
                            <Path Data="M0 0 12 12M0 12 12 0" Stroke="White" StrokeThickness="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="back" Property="Background" Value="#22FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="back" Property="Background" Value="#44FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate TargetType="Button" x:Key="LogoInButtonTemplate">
                        <Border Background="#007DFA" CornerRadius="5">
                            <Grid>
                                <Border CornerRadius="5" Background="#22FFFFFF" Name="back" Visibility="Hidden"></Border>
                                <ContentControl Content="{TemplateBinding Content}" VerticalAlignment="Center" 
                                    HorizontalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="back"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Visible" TargetName="back"/>
                                <Setter Property="Background" Value="#EEE" TargetName="back"/>
                                <Setter Property="Foreground" Value="#AAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <!--这个是通过右击页面textbox的编辑属性生成的自定义属性-->
                    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
                    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
                    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
                    <Style x:Key="UserNameTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="&#xe7c8;"  FontSize="20"
                                    FontFamily="../Asserts/Fonts/#iconfont" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                             MinHeight="20" VerticalAlignment="Center" VerticalScrollBarVisibility="Hidden"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                        <Setter Property="PasswordChar" Value="●"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type PasswordBox}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="&#xe661;"  FontSize="20"
                                    FontFamily="../Asserts/Fonts/#iconfont" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Focusable="false" VerticalAlignment="Center"
                                          MinHeight="20" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="VerificationTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                                <ColumnDefinition Width="80"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="&#xe702;"  FontSize="20"
                                    FontFamily="../Asserts/Fonts/#iconfont" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Focusable="false" VerticalAlignment="Center"
                                          MinHeight="20" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            <Image Source="" Grid.Column="2"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Border Margin="5" Background="White" CornerRadius="10">
        <Border.Effect>
            <DropShadowEffect Color="Gray" ShadowDepth="0" BlurRadius="5" Opacity="0" Direction="0"/>
        </Border.Effect>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1.8*"></RowDefinition>
                <RowDefinition Height="3*"></RowDefinition>
                <RowDefinition Height="100"></RowDefinition>
            </Grid.RowDefinitions>
            <!--RowDefinition会定义行出来 下面的标签如果没有设置Grid.Row="n" 默认都会出现在第0行-->
            <Border Background="#007DFA" CornerRadius="10,10,0,0" MouseLeftButtonDown="Border_MouseLeftButtonDown"></Border>
            <Button VerticalAlignment="Top" HorizontalAlignment="Right" Width="40" Height="30" 
                    Style="{StaticResource WindowControlButtonStyle}" Content="&#xe611;"
                    Command="{Binding CloseWindowCommand}" 
                    CommandParameter="{Binding ElementName=Window}"/>
            <StackPanel VerticalAlignment="Bottom" Margin="0 0 0 40">
                <!--这边如果图片是透明的一定能看到有圆形出现-->
                <!--VerticalAlignment="Center" HorizontalAlignment="Center" 这样设置会自动包裹内层的元素-->
                <Border Height="70" Width="70" Background="White" VerticalAlignment="Center" HorizontalAlignment="Center"
                        CornerRadius="50" Margin="0 0 0 20">
                    <Border.Effect>
                        <DropShadowEffect Color="White" ShadowDepth="0" BlurRadius="5" Opacity="0" Direction="0"/>
                    </Border.Effect>
                    <Border Height="65" Width="65" CornerRadius="50" HorizontalAlignment="Center">
                        <Border.Background>
                            <ImageBrush ImageSource="../Asserts/kuli.jpg"></ImageBrush>
                        </Border.Background>
                    </Border>
                </Border>
                <TextBlock Text="Everything will be OK" HorizontalAlignment="Center" Foreground="White" FontSize="18"></TextBlock>
            </StackPanel>

            <Grid Grid.Row="1" Margin="20 10" FocusManager.FocusedElement="{Binding ElementName=txtUserName}">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition MinHeight="20" Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBox Height="40" FontSize="16" Foreground="#555" 
                         Text="{Binding LoginModel.UserName,UpdateSourceTrigger=PropertyChanged}" 
                         Style="{DynamicResource UserNameTextBoxStyle}"
                         Name="txtUserName">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}"
                        CommandParameter="{Binding ElementName=Window}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <!--第一次右击编辑模板的时候，点击另一个标签会不起作用，所以要按照下面进行设置-->
                <!--视图-其他窗口-文档大纲-然后点击window向上一步-->
                <PasswordBox Grid.Row="1" Height="40" FontSize="16" Foreground="#555" 
                             common:PasswordHelper.Attach="True"
                             common:PasswordHelper.Password="{Binding LoginModel.Password, Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}" 
                             Style="{DynamicResource PasswordBoxStyle}">
                    <PasswordBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}"
                        CommandParameter="{Binding ElementName=Window}"/>
                    </PasswordBox.InputBindings>
                </PasswordBox>
                <TextBox Grid.Row="2" Height="40" FontSize="16" Text="{Binding LoginModel.ValidationCode,UpdateSourceTrigger=PropertyChanged}" 
                         Foreground="#555" Style="{DynamicResource VerificationTextBoxStyle}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}"
                        CommandParameter="{Binding ElementName=Window}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button  Grid.Row="3" 
                         Content="登    录" Height="40" Foreground="White" FontSize="16" 
                         Template="{StaticResource LogoInButtonTemplate}"
                         Command="{Binding LoginCommand}" 
                         CommandParameter="{Binding ElementName=Window}"/>
                <TextBlock Text="{Binding ErrorMessage}" Grid.Row="4" Foreground="Red" FontSize="13" VerticalAlignment="Center" HorizontalAlignment="Center"
                           TextWrapping="Wrap" LineHeight="20" />
            </Grid>

            <Grid Grid.Row="2" Margin="20 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"></RowDefinition>
                    <RowDefinition Height="80"></RowDefinition>
                </Grid.RowDefinitions>
                <!--代表那根线-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="30"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="#DDD" BorderThickness="0 0 0 1" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Text="OR" Foreground="#CCC" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Border Grid.Column="2" BorderBrush="#DDD" BorderThickness="0 0 0 1" VerticalAlignment="Center"/>
                </Grid>

                <UniformGrid Columns="5" Grid.Row="1">
                    <UniformGrid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="#DDD"/>
                            <Setter Property="FontSize" Value="30"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="FontFamily" Value="../Asserts/Fonts/#iconfont"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#007DFA"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </UniformGrid.Resources>
                    <TextBlock Text="&#xe703;"/>
                    <Border Background="White"/>
                    <TextBlock Text="&#xe62a;"/>
                    <Border Background="White"/>
                    <TextBlock Text="&#xe618;"/>
                </UniformGrid>
            </Grid>

            <!--Grid.RowSpan="2" 这行是加在上面的，但是没什么用-->
            <Border Background="Transparent" Grid.Row="1"   Visibility="{Binding ShowProgress}">
                <ProgressBar VerticalAlignment="Top" Height="3" IsIndeterminate="True" Foreground="Orange"
                             Background="Transparent" BorderThickness="0"/>
            </Border>
        </Grid>
    </Border>

</Window>
